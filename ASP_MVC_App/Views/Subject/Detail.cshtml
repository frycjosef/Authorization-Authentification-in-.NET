@model ASP_MVC_App.Entities.Subject

@{
    ViewData["Title"] = "Edit Subject";
    
    var canEditName = PermissionHelper.HasPermission("EditSubjects.Name", ViewContext.HttpContext);
    var canEditDescription = PermissionHelper.HasPermission("EditSubjects.Description", ViewContext.HttpContext);
}

<h1>Edit Subject</h1>

<div>
    <a class="nav-link" asp-action="List">Back to List</a>
</div>

@using (Html.BeginForm("Update", "Subject", new { id = Model.Id }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)

    <div class="form-group mb-2">
        <label asp-for="Name" class="control-label">Name</label>
        @if (!canEditName)
        {
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = true, @disabled = true })
        }
        else
        {
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control"})
        }
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-2">
        <label asp-for="Description" class="control-label">Description</label>
        @if (!canEditDescription)
        {
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @readonly = true, @disabled = true })
        }
        else 
        {
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control"})
        }        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary" @(PermissionHelper.HasPermission("EditSubjects.*", ViewContext.HttpContext) ? "" : "disabled")> Save </button>
    </div>
}
